@using Koncierge.Core.K8s
@using Koncierge.Domain.DTOs
@using Koncierge.Domain.Enums
@using Koncierge.Ui.Components.Layout.Selects
@using Koncierge.Core.K8s.Extensions

<MudDialog>
    <TitleContent>
        Dialog Title
    </TitleContent>
    <DialogContent>
<MudRadioGroup T="AdditionalConfigType" ValueChanged="OnTypeChange">
    <MudRadio Value="AdditionalConfigType.Secret" Color="Color.Primary" Dense="true">Secret</MudRadio>
    <MudRadio Value="AdditionalConfigType.ConfigMap" Color="Color.Secondary" Dense="false">ConfigMap</MudRadio>
</MudRadioGroup>

        <AdditionalConfigSelect OnAdditonalConfigSelection="ConfigSelection" @ref="tmppppppp" cfgType="cfgType" _kc="_kc" selectedNs="selectedNs" />
    </DialogContent>
        <DialogActions>
            <MudButton OnClick="Cancel">Cancel</MudButton>
            <MudButton Color="Color.Primary" OnClick="Submit">OK</MudButton>
        </DialogActions>
</MudDialog>


@code {
    [CascadingParameter]
    private IMudDialogInstance MudDialog { get; set; }



    [Parameter]
    public KonciergeClient _kc { get; set; }


    [Parameter]
    public KonciergeNamespaceDto selectedNs { get; set; }

    [Parameter]
    public EventCallback<List<KonciergeAdditionalConfigDto>> OnConfigSelection { get; set; }


    [Parameter]
    public List<KonciergeAdditionalConfigDto> selectedAdditionalConfigs { get; set; }

    public AdditionalConfigType cfgType = AdditionalConfigType.Secret;

    public List<KonciergePortDto> portList { get; set; } = new();

    private List<KonciergeAdditionalConfigDto> secrets = new();
    private List<KonciergeAdditionalConfigDto> configMaps = new();
    private bool _loading = true;

    AdditionalConfigSelect tmppppppp;

    private HashSet<KonciergeAdditionalConfigItemDto> selectedLeaves = new();


    protected override async Task OnInitializedAsync()
    {
        _loading = true;
        configMaps = await _kc.GetConfigMapsAsync(selectedNs.Name);
        secrets = await _kc.GetSecretsAsync(selectedNs.Name);

        _loading = false;

    }


    public async Task OnTypeChange(AdditionalConfigType selected)
    {
        cfgType = selected;

        await tmppppppp.Refresh();


    }


    public async Task ConfigSelection(KonciergeAdditionalConfigDto selected)
    {
       







    }

    private async Task Submit() {
    
                await OnConfigSelection.InvokeAsync(new ());
                MudDialog.Close(DialogResult.Ok(true));
    
    } 

    private void Cancel() => MudDialog.Cancel();


}
