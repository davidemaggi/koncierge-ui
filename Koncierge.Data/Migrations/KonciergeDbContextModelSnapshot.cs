// <auto-generated />
using System;
using Koncierge.Data;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace Koncierge.Data.Migrations
{
    [DbContext(typeof(KonciergeDbContext))]
    partial class KonciergeDbContextModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder.HasAnnotation("ProductVersion", "8.0.17");

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeContextConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("KonciergeKubeConfigId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KonciergeKubeConfigId");

                    b.ToTable("Contexts");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeForward", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("KonciergeNamespaceConfigId")
                        .HasColumnType("TEXT");

                    b.Property<int>("TargetType")
                        .HasColumnType("INTEGER");

                    b.HasKey("Id");

                    b.HasIndex("KonciergeNamespaceConfigId");

                    b.ToTable("Forwards");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeForwardAdditionalConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("KonciergeForwardId")
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KonciergeForwardId");

                    b.ToTable("ForwardLinkedConfigs");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeKubeConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<bool>("IsDefault")
                        .HasColumnType("INTEGER");

                    b.Property<string>("Path")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.ToTable("KubeConfigs");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeNamespaceConfig", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("TEXT");

                    b.Property<Guid?>("KonciergeContextConfigId")
                        .HasColumnType("TEXT");

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("TEXT");

                    b.HasKey("Id");

                    b.HasIndex("KonciergeContextConfigId");

                    b.ToTable("NameSpaces");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeContextConfig", b =>
                {
                    b.HasOne("Koncierge.Domain.Entities.KonciergeKubeConfig", null)
                        .WithMany("Contexts")
                        .HasForeignKey("KonciergeKubeConfigId");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeForward", b =>
                {
                    b.HasOne("Koncierge.Domain.Entities.KonciergeNamespaceConfig", null)
                        .WithMany("Forwards")
                        .HasForeignKey("KonciergeNamespaceConfigId");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeForwardAdditionalConfig", b =>
                {
                    b.HasOne("Koncierge.Domain.Entities.KonciergeForward", null)
                        .WithMany("AdditionalConfigs")
                        .HasForeignKey("KonciergeForwardId");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeNamespaceConfig", b =>
                {
                    b.HasOne("Koncierge.Domain.Entities.KonciergeContextConfig", null)
                        .WithMany("Namespaces")
                        .HasForeignKey("KonciergeContextConfigId");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeContextConfig", b =>
                {
                    b.Navigation("Namespaces");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeForward", b =>
                {
                    b.Navigation("AdditionalConfigs");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeKubeConfig", b =>
                {
                    b.Navigation("Contexts");
                });

            modelBuilder.Entity("Koncierge.Domain.Entities.KonciergeNamespaceConfig", b =>
                {
                    b.Navigation("Forwards");
                });
#pragma warning restore 612, 618
        }
    }
}
